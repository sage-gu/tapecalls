{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "ProcessVoicemailLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/tapecalls-prod-processVoicemail",
        "RetentionInDays": 30
      }
    },
    "AgentLoginLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/tapecalls-prod-agentLogin",
        "RetentionInDays": 30
      }
    },
    "AgentLoginAsyncLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/tapecalls-prod-agentLoginAsync",
        "RetentionInDays": 30
      }
    },
    "SaveToDBLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/tapecalls-prod-saveToDB",
        "RetentionInDays": 30
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "prod",
                  "tapecalls",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tapecalls-prod*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tapecalls-prod*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sns:Publish"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:sns:${AWS::Region}:274782887682:Connect"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sns:Publish"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:sns:${AWS::Region}:274782887682:Connect"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sns:Publish"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:sns:${AWS::Region}:274782887682:Connect"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sns:Publish"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:sns:${AWS::Region}:274782887682:Connect"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "tapecalls",
              "prod",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "EnterpriseLogAccessIamRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::802587217904:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "ServerlessEnterprise-96s2pk25mRg4yH9wvT"
                }
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "LogFilterAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:FilterLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "ProcessVoicemailLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "AgentLoginLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "AgentLoginAsyncLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "SaveToDBLogGroup",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "ProcessVoicemailLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tapecalls/prod/1580378519724-2020-01-30T10:01:59.724Z/package.zip"
        },
        "FunctionName": "tapecalls-prod-processVoicemail",
        "Handler": "s_processVoicemail.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "ProcessVoicemailIamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 300,
        "Description": "Processes new voicemail recordings by transcribing and notifying via an SNS topic.",
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::Sub": "arn:aws:sns:${AWS::Region}:274782887682:Connect"
          }
        },
        "Environment": {
          "Variables": {
            "AGENT_LOGIN_TOPIC": {
              "Fn::Sub": "arn:aws:sns:${AWS::Region}:274782887682:tapecalls-agentLogin"
            },
            "NOTIFICATION_TOPIC": {
              "Fn::Sub": "arn:aws:sns:${AWS::Region}:274782887682:Connect"
            },
            "NOTIFICATION_TIMEZONE": "Australia/Perth",
            "LINK_EXPIRY_IN_DAYS": 7,
            "CONNECT_REGION": {
              "Fn::Sub": "${AWS::Region}"
            },
            "CONNECT_LOG_GROUP": "/aws/connect/tapecalls",
            "MONGODB_CLUSTER_URI_DEV_NEW": "mongodb+srv://sage:gujie2593@cluster0-lx2np.mongodb.net/tapecalls"
          }
        }
      },
      "DependsOn": [
        "ProcessVoicemailIamRoleLambdaExecution",
        "ProcessVoicemailLogGroup"
      ]
    },
    "ProcessVoicemailLambdaVersionHic95ttZFgIfX8fFhvOQRDsmDefh1rcDqsDq23lTjQ": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ProcessVoicemailLambdaFunction"
        },
        "CodeSha256": "RXEVqwuuE6o9LZE+K9VxRgQMOB8HiHn/BE13ncpW+wo=",
        "Description": "Processes new voicemail recordings by transcribing and notifying via an SNS topic."
      }
    },
    "AgentLoginLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tapecalls/prod/1580378519724-2020-01-30T10:01:59.724Z/package.zip"
        },
        "FunctionName": "tapecalls-prod-agentLogin",
        "Handler": "s_agentLogin.handler",
        "MemorySize": 1536,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 300,
        "Description": "Logs into the CCP as the voicemail agent/user and ensures they're Available to take calls.",
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::Sub": "arn:aws:sns:${AWS::Region}:274782887682:Connect"
          }
        },
        "Environment": {
          "Variables": {
            "CCP_URL": "https://tapecalls.awsapps.com/connect/ccp",
            "CCP_USERNAME": "voicemail",
            "CCP_PASSWORD": "Gujie2593",
            "NOTIFICATION_TOPIC": {
              "Fn::Sub": "arn:aws:sns:${AWS::Region}:274782887682:Connect"
            }
          }
        }
      },
      "DependsOn": [
        "AgentLoginLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "AgentLoginLambdaVersionmJUy0lTHDZwyjEFdr27o1vkv6HiKsUrQ9f6EAWo": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AgentLoginLambdaFunction"
        },
        "CodeSha256": "RXEVqwuuE6o9LZE+K9VxRgQMOB8HiHn/BE13ncpW+wo=",
        "Description": "Logs into the CCP as the voicemail agent/user and ensures they're Available to take calls."
      }
    },
    "AgentLoginAsyncLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tapecalls/prod/1580378519724-2020-01-30T10:01:59.724Z/package.zip"
        },
        "FunctionName": "tapecalls-prod-agentLoginAsync",
        "Handler": "s_agentLoginAsync.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "AgentLoginAsyncIamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 300,
        "Description": "Sends an SNS message to trigger the agentLogin handler asynchronously, to avoid blocking. Invoked by Contact Flows directly.",
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::Sub": "arn:aws:sns:${AWS::Region}:274782887682:Connect"
          }
        },
        "Environment": {
          "Variables": {
            "AGENT_LOGIN_TOPIC": {
              "Fn::Sub": "arn:aws:sns:${AWS::Region}:274782887682:tapecalls-agentLogin"
            },
            "NOTIFICATION_TOPIC": {
              "Fn::Sub": "arn:aws:sns:${AWS::Region}:274782887682:Connect"
            }
          }
        }
      },
      "DependsOn": [
        "AgentLoginAsyncIamRoleLambdaExecution",
        "AgentLoginAsyncLogGroup"
      ]
    },
    "AgentLoginAsyncLambdaVersionxTDyGlyrOnQRlIrOuhQIs8u3lbk0cidcsN9BMpmo8N4": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AgentLoginAsyncLambdaFunction"
        },
        "CodeSha256": "RXEVqwuuE6o9LZE+K9VxRgQMOB8HiHn/BE13ncpW+wo=",
        "Description": "Sends an SNS message to trigger the agentLogin handler asynchronously, to avoid blocking. Invoked by Contact Flows directly."
      }
    },
    "SaveToDBLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tapecalls/prod/1580378519724-2020-01-30T10:01:59.724Z/package.zip"
        },
        "FunctionName": "tapecalls-prod-saveToDB",
        "Handler": "s_saveToDB.handler",
        "MemorySize": 1536,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 300,
        "Description": "save s3 file URL and contant info.",
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::Sub": "arn:aws:sns:${AWS::Region}:274782887682:Connect"
          }
        },
        "Environment": {
          "Variables": {
            "MONGODB_CLUSTER_URI_DEV_NEW": "mongodb+srv://sage:gujie2593@cluster0-lx2np.mongodb.net/tapecalls",
            "NOTIFICATION_TOPIC": {
              "Fn::Sub": "arn:aws:sns:${AWS::Region}:274782887682:Connect"
            }
          }
        }
      },
      "DependsOn": [
        "SaveToDBLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "SaveToDBLambdaVersionYkNljpWx1Wv34zuv855DsIgw8x42dSGhaD7Menu93c": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SaveToDBLambdaFunction"
        },
        "CodeSha256": "RXEVqwuuE6o9LZE+K9VxRgQMOB8HiHn/BE13ncpW+wo=",
        "Description": "save s3 file URL and contant info."
      }
    },
    "AgentLoginEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(0, 8, *, *, ?, *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AgentLoginLambdaFunction",
                "Arn"
              ]
            },
            "Id": "agentLoginSchedule"
          }
        ]
      }
    },
    "AgentLoginLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AgentLoginLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "AgentLoginEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "S3BucketTapecallsrecording": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "tapecalls-recording",
        "NotificationConfiguration": {
          "LambdaConfigurations": [
            {
              "Event": "s3:ObjectCreated:*",
              "Function": {
                "Fn::GetAtt": [
                  "ProcessVoicemailLambdaFunction",
                  "Arn"
                ]
              }
            }
          ]
        }
      },
      "DependsOn": [
        "ProcessVoicemailLambdaPermissionTapecallsrecordingS3"
      ]
    },
    "ProcessVoicemailLambdaPermissionTapecallsrecordingS3": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ProcessVoicemailLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "s3.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":s3:::tapecalls-recording"
            ]
          ]
        }
      }
    },
    "SNSTopicTapecallsagentLogin": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "tapecalls-agentLogin",
        "DisplayName": "Triggers lambda to ensure a voicemail agent is available to handle calls",
        "Subscription": [
          {
            "Endpoint": {
              "Fn::GetAtt": [
                "AgentLoginLambdaFunction",
                "Arn"
              ]
            },
            "Protocol": "lambda"
          }
        ]
      }
    },
    "AgentLoginLambdaPermissionTapecallsagentLoginSNS": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AgentLoginLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":sns:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              "tapecalls-agentLogin"
            ]
          ]
        }
      }
    },
    "ProcessVoicemailIamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "prod",
                  "tapecalls",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tapecalls-prod-processVoicemail:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sns:Publish"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:sns:${AWS::Region}:274782887682:Connect"
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:FilterLogEvents"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:logs:${AWS::Region}:274782887682:log-group:/aws/connect/tapecalls:*"
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "transcribe:StartTranscriptionJob",
                    "transcribe:GetTranscriptionJob"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject"
                  ],
                  "Resource": "arn:aws:s3:::tapecalls-recording/*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sns:Publish"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:sns:${AWS::Region}:274782887682:Connect"
                    },
                    {
                      "Fn::Sub": "arn:aws:sns:${AWS::Region}:274782887682:tapecalls-agentLogin"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": "tapecalls-prod-processVoicemail-lambdaRole",
        "ManagedPolicyArns": []
      }
    },
    "AgentLoginAsyncIamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "prod",
                  "tapecalls",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tapecalls-prod-agentLoginAsync:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sns:Publish"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:sns:${AWS::Region}:274782887682:Connect"
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sns:Publish"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:sns:${AWS::Region}:274782887682:tapecalls-agentLogin"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "tapecalls",
              "prod",
              "agentLoginAsync",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        },
        "ManagedPolicyArns": []
      }
    },
    "CloudWatchLogsSubscriptionFilterProcessVoicemailLogGroup": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:96s2pk25mRg4yH9wvT#BmTSltmzgNLHl9rdSg#tapecalls#prod",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "ProcessVoicemailLogGroup"
        }
      }
    },
    "CloudWatchLogsSubscriptionFilterAgentLoginLogGroup": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:96s2pk25mRg4yH9wvT#BmTSltmzgNLHl9rdSg#tapecalls#prod",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "AgentLoginLogGroup"
        }
      }
    },
    "CloudWatchLogsSubscriptionFilterAgentLoginAsyncLogGroup": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:96s2pk25mRg4yH9wvT#BmTSltmzgNLHl9rdSg#tapecalls#prod",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "AgentLoginAsyncLogGroup"
        }
      }
    },
    "CloudWatchLogsSubscriptionFilterSaveToDBLogGroup": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:96s2pk25mRg4yH9wvT#BmTSltmzgNLHl9rdSg#tapecalls#prod",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "SaveToDBLogGroup"
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "EnterpriseLogAccessIamRole": {
      "Value": {
        "Fn::GetAtt": [
          "EnterpriseLogAccessIamRole",
          "Arn"
        ]
      }
    },
    "ProcessVoicemailLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ProcessVoicemailLambdaVersionHic95ttZFgIfX8fFhvOQRDsmDefh1rcDqsDq23lTjQ"
      }
    },
    "AgentLoginLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AgentLoginLambdaVersionmJUy0lTHDZwyjEFdr27o1vkv6HiKsUrQ9f6EAWo"
      }
    },
    "AgentLoginAsyncLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AgentLoginAsyncLambdaVersionxTDyGlyrOnQRlIrOuhQIs8u3lbk0cidcsN9BMpmo8N4"
      }
    },
    "SaveToDBLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SaveToDBLambdaVersionYkNljpWx1Wv34zuv855DsIgw8x42dSGhaD7Menu93c"
      }
    }
  }
}